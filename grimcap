#!/bin/bash
# grimcap
# a simplified take on grimblast but we retain swayland compatability from grimshot & more.
# implements image (to clipboard) & video capture, utilizing reusable code for sway/hyprland.
# auto copies, saves (with file path), compresses & opens/saves.
# created by following the wayland section of the archwiki.

# dependencies:
# jq - json
# grim - capture image
# slurp - select geometry
# wf-recorder - capture video
# wl-clipboard - copy
# hyprctl OR swaymsg - active window detection
# swayimg - open image
# mpv - play video
# ffmpeg - video/image compression

# references:
# - https://wiki.archlinux.org/title/Screen_capture#Wayland
# - https://github.com/hyprwm/contrib/blob/main/grimblast/grimblast
# - https://github.com/swaywm/sway/blob/master/contrib/grimshot

usage() {
    cat <<EOF
Usage: grimcap <ACTION> <TARGET> [DIR]

Actions:
    snap: screenshot to DIR
    snap-copy: screenshot to clipboard
    rec: record to DIR

Targets:
    active: active window
    area: select a region
    screen: entire display
EOF

    exit 1
}

into_date_path() {
    capDir="${3:-$HOME/.caps}"
    [[ -d $capDir ]]|| mkdir "$capDir"
    
    printf "${capDir%/}/%(%Y-%m-%d_%H-%M-%S)T_$2.$1"
}

active_window() {
    if hash hyprctl 2>/dev/null; then
        hyprctl -j activewindow | \
            jq -r '"\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"'
    elif hash swaymsg 2>/dev/null; then
        swaymsg -t get_tree | \
            jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"'
    fi
}

set -eEuo pipefail

case "$1" in
    'snap')
        tmpPath=$(mktemp -u --suffix='png')
        capPath=$(into_date_path 'jpg' "$2" "${3-}")
        
        case "$2" in
            'active') grim -l 9 -g "$(active_window)" "$tmpPath";;
            'area') slurp | grim -l 9 -g - "$tmpPath";;
            'screen') grim -l 9 "$tmpPath";;
            *) usage;;
        esac

        printf 'Compressing %s...\n' "$capPath"
        ffmpeg -i "$tmpPath" -q:v 16 -y "$capPath"
        rm "$tmpPath"
        
        printf 'Capture saved to: %s\n' "$capPath"
        swayimg "$capPath"
    ;;
    'snap-copy')
        case "$2" in
            'active') grim -l 9 -g "$(active_window)" - | wl-copy;;
            'area') slurp | grim -l 9 -g - - | wl-copy;;
            'screen') grim -l 9 - | wl-copy;;
            *) usage;;
        esac

        printf 'Copied to clipboard\n'
    ;;
    'rec')
        tmpPath=$(mktemp -u --suffix='.mp4')
        capPath=$(into_date_path 'mp4' "$2" "${3-}")

        case "$2" in
            'active') wf-recorder -g "$(active_window)" -f "$tmpPath";;
            'area') wf-recorder -g "$(slurp)" -f "$tmpPath";;
            'screen') wf-recorder -f "$tmpPath";;
            *) usage;;
        esac

        printf 'Compressing %s...\n' "$capPath"
        ffmpeg -i "$tmpPath" -vcodec libx265 -crf 28 "$capPath" -y
        rm "$tmpPath"

        printf 'Recording saved to: %s\n' "$capPath"
        mpv "$capPath"
    ;;
    *) usage;;
esac
